service: auction-master-service

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters  
	
useDotenv: true
provider:
  name: aws
  runtime: nodejs16.x
  memorySize: 512
  stage: ${opt:stage, 'dev'}
  region: ap-south-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    EMAIL_SOURCE_ENV_VALUE: ${env:EMAIL_SOURCE_ENV_VALUE}
    AUCTIONS_BUCKET_NAME: ${self:custom.AuctionsBucket.name}
  iamRoleStatements:
    - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
    - ${file(iam/MailQueueIAM.yml):MailQueueIAM}
    - ${file(iam/AuctionsBucketIAM.yml):AuctionsBucketIAM}

resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}
    AuctionsBucket: ${file(resources/AuctionsBucket.yml):AuctionsBucket}
    AuctionsBucketPolicy: ${file(resources/AuctionsBucket.yml):AuctionsBucketPolicy}

functions:
  createMasterAuction:
    handler: src/handlers/createMasterAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          authorizer: ${self:custom.authorizer}
  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.authorizer}
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid
          authorizer: ${self:custom.authorizer}
  uploadAuctionPicture:
    handler: src/handlers/uploadAuctionPicture.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/picture
          authorizer: ${self:custom.authorizer}        
  processAuctions:
    handler: src/handlers/processAuctions.handler
    #events:
    #  - schedule: rate(1 minute)
                                    
custom:
  authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn:  !GetAtt AuctionsTable.Arn
  MailQueue:
    arn: ${cf:sls-notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:sls-notification-service-${self:provider.stage}.MailQueueUrl}
  AuctionsBucket:
    name: ${self:service}-${opt:stage, self:provider.stage}-${file(src/lib/generateTimestamp.js)}-${file(src/lib/randomeString.js)}
  bundle:
    linting: false            
